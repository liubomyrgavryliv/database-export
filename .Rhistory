)
View(ms_species_crystal)
View(ms_species_crystal)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
)
filter(str_detect(`Crystal System`, 'tetragonal'))
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'tetragonal'))
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'tetragonal')) %>%
filter(a==b && a!=c)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'tetragonal')) %>%
filter(a==b && a==c)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'orthorhombic'))
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'orthorhombic')) %>%
filter(a!=b && a!=c)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'monoclinic'))
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'monoclinic')) %>%
filter(a!=b && a!=c)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'trigonal'))
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'trigonal')) %>%
filter(a!=b && a!=c)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'trigonal')) %>%
filter(a==b && a==c)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'trigonal')) %>%
filter(a==b && a==c)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
)
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'trigonal'))
View(ms_species_crystal)
View(ms_species_crystal)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'triclinic'))
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'triclinic')) %>%
filter(a!=b && a!=c)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'hexagonal'))
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'hexagonal')) %>%
filter(a==b && a!=c)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
filter(str_detect(`Crystal System`, 'trigonal')) %>%
filter(a==b && a!=c)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE)
View(ms_species_crystal)
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name') %>%
left_join(ns_space_groups_list, by='space_group_name')
View(ms_species_crystal)
initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name') %>%
left_join(ns_space_groups_list, by='space_group_name')
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`))
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,'))
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE)
space_groups_list
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name')
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by='space_group_name', copy=TRUE)
View(ms_species_crystal)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE)
ms_species_crystal %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by='space_group_name', copy=TRUE)
ms_species_crystal
ms_species_crystal$space_group_name
ms_species_crystal %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE)
ms_species_crystal <- ms_species_crystal %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('ns_space_group_name'='space_group_name'), copy=TRUE)
ms_species_crystal <- ms_species_crystal %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE)
ms_species_crystal <- ms_species_crystal %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE)
View(ms_species_crystal)
View(ms_species_crystal)
View(ms_species_crystal)
View(ms_species_crystal)
ms_species_crystal <- ms_species_crystal %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, NA))
ms_species_crystal <- ms_species_crystal %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x)
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, NA))
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, space_group_id))
View(ms_species_crystal)
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x, mineral_name=`Mineral_Name`) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, space_group_id)) %>%
inner_join(ms_species, by='mineral_name', copy=TRUE)
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x, mineral_name=`Mineral_Name`, alpha=α, beta=β, gamma=γ, z=Z) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, space_group_id)) %>%
inner_join(ms_species, by='mineral_name', copy=TRUE) %>%
select(mineral_id, crystal_system_id, crystal_class_id, space_group_id, ns_space_group_id, a, b, c, alpha, beta, gamma, z)
View(ms_species_crystal)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(crystal_systems_list, by=c('Crystal System' = 'crystal_system_name'), copy=TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x, mineral_name=`Mineral_Name`, alpha=α, beta=β, gamma=γ, z=Z) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, space_group_id)) %>%
inner_join(ms_species, by='mineral_name', copy=TRUE) %>%
select(mineral_id, crystal_system_id, crystal_class_id, space_group_id, ns_space_group_id, a, b, c, alpha, beta, gamma, z)
View(ms_species_crystal)
# LOAD into DB
dbSendQuery(conn, "delete from ms_species_crystal;")
dbWriteTable(conn, "ms_species_crystal", ms_species_crystal, append=TRUE)
ms_species_crystal %>%
distinct(z)
# LOAD data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Crystallography',
range = 'A:O',col_types = 'c',
col_names = TRUE,
)
# parse a, b, c, alpha, beta, gamma to numeric
ms_species_crystal <- initial %>%
filter(!is.na(`Crystal System`)) %>%
mutate(a=as.numeric(str_replace_all(a,'\\(.*\\)', '')),
b=as.numeric(str_replace_all(b,'\\(.*\\)', '')),
c=as.numeric(str_replace_all(c,'\\(.*\\)', '')),
α=as.numeric(str_replace_all(α,'\\(.*\\)', '')),
β=as.numeric(str_replace_all(β,'\\(.*\\)', '')),
γ=as.numeric(str_replace_all(γ,'\\(.*\\)', ''))
) %>%
mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(crystal_systems_list, by=c('Crystal System' = 'crystal_system_name'), copy=TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x, mineral_name=`Mineral_Name`, alpha=α, beta=β, gamma=γ, z=Z) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, space_group_id)) %>%
inner_join(ms_species, by='mineral_name', copy=TRUE) %>%
select(mineral_id, crystal_system_id, crystal_class_id, space_group_id, ns_space_group_id, a, b, c, alpha, beta, gamma, z)
# LOAD into DB
dbSendQuery(conn, "delete from ms_species_crystal;")
dbWriteTable(conn, "ms_species_crystal", ms_species_crystal, append=TRUE)
