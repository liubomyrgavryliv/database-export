anion,
silicate,
silicate_html,
cation_html,
anion_html,
elements,
strunz,
formula,
ima,
year)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?')) %>%
mutate(elements = map(elements, function(x) { paste(unique(unlist(x)), collapse=';')  })) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicates_real), str_replace_all(silicates_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicate_html), str_replace_all(silicate_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cations_real), str_replace_all(cations_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cation_html), str_replace_all(cation_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anions_real), str_replace_all(anions_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anion_html), str_replace_all(anion_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_real), str_replace_all(other_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_html), str_replace_all(other_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
left_join(names, by='Mineral_Name') %>%
left_join(status_data, by='Mineral_Name') %>%
rename(strunz=Strunz, formula=Formula, ima=IMA.Status, cation=cations_theoretical, anion=anions_theoretical,silicate=silicates_theoretical,
year=discovery_year_min,other=other_theoretical, name=Mineral_Name) %>%
select(name,
cation,
anion,
silicate,
silicate_html,
cation_html,
anion_html,
elements,
strunz,
formula,
ima,
year)
View(periodic_table)
View(periodic_table)
View(names)
names <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Names data',
range = 'A:B',
col_names = TRUE,
col_types = 'cc',
na = ""
) %>%
select(Mineral_Name, discovery_year_min)
View(names)
View(nickel_strunz)
View(periodic_table)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?')) %>%
mutate(elements = map(elements, function(x) { ifelse(!is.na(x), paste(unique(unlist(x)), collapse=';'), NA)  })) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicates_real), str_replace_all(silicates_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicate_html), str_replace_all(silicate_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cations_real), str_replace_all(cations_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cation_html), str_replace_all(cation_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anions_real), str_replace_all(anions_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anion_html), str_replace_all(anion_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_real), str_replace_all(other_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_html), str_replace_all(other_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
left_join(names, by='Mineral_Name') %>%
left_join(status_data, by='Mineral_Name') %>%
rename(strunz=Strunz, formula=Formula, ima=IMA.Status, cation=cations_theoretical, anion=anions_theoretical,silicate=silicates_theoretical,
year=discovery_year_min,other=other_theoretical, name=Mineral_Name) %>%
select(name,
cation,
anion,
silicate,
silicate_html,
cation_html,
anion_html,
elements,
strunz,
formula,
ima,
year)
View(periodic_table)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?')) %>%
mutate(elements = map(elements, function(x) { ifelse(!is.na(x), paste(unique(unlist(x)), collapse=';'), NA_character_)  }))
View(periodic_table)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?'))
View(periodic_table)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?')) %>%
mutate(elements = map(elements, function(x) { paste(unique(unlist(x)), collapse=';')  }))
View(periodic_table)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?')) %>%
mutate(elements = map(elements, function(x) { paste(unique(unlist(x)), collapse=';')  })) %>%
mutate(elements = str_replace(elements, 'NA', NA)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicates_real), str_replace_all(silicates_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicate_html), str_replace_all(silicate_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cations_real), str_replace_all(cations_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cation_html), str_replace_all(cation_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anions_real), str_replace_all(anions_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anion_html), str_replace_all(anion_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_real), str_replace_all(other_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_html), str_replace_all(other_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
left_join(names, by='Mineral_Name') %>%
left_join(status_data, by='Mineral_Name') %>%
rename(strunz=Strunz, formula=Formula, ima=IMA.Status, cation=cations_theoretical, anion=anions_theoretical,silicate=silicates_theoretical,
year=discovery_year_min,other=other_theoretical, name=Mineral_Name) %>%
select(name,
cation,
anion,
silicate,
silicate_html,
cation_html,
anion_html,
elements,
strunz,
formula,
ima,
year)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?')) %>%
mutate(elements = map(elements, function(x) { paste(unique(unlist(x)), collapse=';')  })) %>%
mutate(elements = str_replace(elements, 'NA', NA_character_)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicates_real), str_replace_all(silicates_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicate_html), str_replace_all(silicate_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cations_real), str_replace_all(cations_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cation_html), str_replace_all(cation_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anions_real), str_replace_all(anions_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anion_html), str_replace_all(anion_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_real), str_replace_all(other_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_html), str_replace_all(other_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
left_join(names, by='Mineral_Name') %>%
left_join(status_data, by='Mineral_Name') %>%
rename(strunz=Strunz, formula=Formula, ima=IMA.Status, cation=cations_theoretical, anion=anions_theoretical,silicate=silicates_theoretical,
year=discovery_year_min,other=other_theoretical, name=Mineral_Name) %>%
select(name,
cation,
anion,
silicate,
silicate_html,
cation_html,
anion_html,
elements,
strunz,
formula,
ima,
year)
View(periodic_table)
status_data <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Status data',
range = 'A:D',
col_names = TRUE,
na = ""
) %>%
select(Mineral_Name, all_indexes, IMA.Status)
periodic_table <- nickel_strunz %>%
mutate(elements = str_match_all(Formula, '[A-Z][a-z]?')) %>%
mutate(elements = map(elements, function(x) { paste(unique(unlist(x)), collapse=';')  })) %>%
mutate(elements = str_replace(elements, 'NA', NA_character_)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicates_real), str_replace_all(silicates_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(silicate_html = ifelse(!is.na(silicate_html), str_replace_all(silicate_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cations_real), str_replace_all(cations_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(cation_html = ifelse(!is.na(cation_html), str_replace_all(cation_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anions_real), str_replace_all(anions_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(anion_html = ifelse(!is.na(anion_html), str_replace_all(anion_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_real), str_replace_all(other_real, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(other_html = ifelse(!is.na(other_html), str_replace_all(other_html, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
left_join(names, by='Mineral_Name') %>%
left_join(status_data, by='Mineral_Name') %>%
rename(strunz=Strunz, formula=Formula, ima=IMA.Status, cation=cations_theoretical, anion=anions_theoretical,silicate=silicates_theoretical,
year=discovery_year_min,other=other_theoretical, name=Mineral_Name) %>%
filter(str_detect(all_indexes, '0.0')) %>%
select(name,
cation,
anion,
silicate,
silicate_html,
cation_html,
anion_html,
elements,
strunz,
formula,
ima,
year)
View(periodic_table)
# Export data
write.csv(mindex_out, 'periodic_table_10022021.csv', na='', quote = F, row.names = F)
# Export data
write.csv(periodic_table, 'periodic_table_10022021.csv', na='', quote = F, row.names = F)
View(periodic_table)
write_csv(periodic_table, 'periodic_table_10022021.csv', na='', quote_escape = "double")
write_csv(periodic_table, 'periodic_table_10022021.csv', na='', quote_escape = "double")
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/post-doc/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Names data',
#range = 'A:AY',
col_names = TRUE,
col_types = 'c',
na = ""
)
View(initial)
stats <- initial %>%
select(Mineral_Name, discovery_year_min) %>%
group_by(discovery_year_min) %>%
summarise(counts = n_distinct())
View(stats)
stats <- initial %>%
select(Mineral_Name, discovery_year_min) %>%
group_by(discovery_year_min) %>%
summarise(counts = n_distinct()) %>%
arrange(discovery_year_min)
View(stats)
stats <- initial %>%
select(Mineral_Name, discovery_year_min) %>%
group_by(discovery_year_min) %>%
summarise(counts = n_distinct(Mineral_Name)) %>%
arrange(discovery_year_min)
View(stats)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
e_rocks <- read.csv(paste0(path, 'minerals (10).csv')) %>%
select(Title, Nid)
getwd()
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/export_e-Rocks")
#Load data ---------------------------------------------------------------------
e_rocks <- read.csv(paste0(path, 'minerals (10).csv')) %>%
select(Title, Nid)
getwd()
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/export_e-Rocks")
rm(list=ls())
path <- 'export/export_e-Rocks'
source('functions.R')
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/export_e-Rocks")
rm(list=ls())
path <- 'export/export_e-Rocks'
#Load data ---------------------------------------------------------------------
e_rocks <- read.csv(paste0(path, 'minerals (10).csv')) %>%
select(Title, Nid)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/export_e-Rocks")
rm(list=ls())
path <- 'export/export_e-Rocks/'
#Load data ---------------------------------------------------------------------
e_rocks <- read.csv(paste0(path, 'minerals (10).csv')) %>%
select(Title, Nid)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/export_e-Rocks")
rm(list=ls())
path <- 'export_e-Rocks/'
#Load data ---------------------------------------------------------------------
e_rocks <- read.csv(paste0(path, 'minerals (10).csv')) %>%
select(Title, Nid)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL")
rm(list=ls())
path <- 'export_e-Rocks/'
e_rocks <- read.csv(paste0(path, 'minerals (10).csv')) %>%
select(Title, Nid)
View(e_rocks)
status <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Status data',
range = 'A:D',
col_names = TRUE,
col_types = 'c',
na = ""
)
status <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Status data',
range = 'A:D',
col_names = TRUE,
col_types = 'c',
na = ""
)
crystal <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Crystallography',
range = 'A:G',
col_names = TRUE,
col_types = 'c',
na = ""
)
physical <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Physical_properties',
range = 'A:V',
col_names = TRUE,
col_types = 'c',
na = ""
)
status <-
status %>%
filter(str_detect(all_indexes, '0.0')) %>%
select(Mineral_Name, IMA.Status) %>%
rename('Approval history' = IMA.Status)
groups <- googlesheets4::read_sheet(
ss='1Wo6n1xggXkITCCApdt_tLsNHOKMxyOgsMqSVpRecYsE',
sheet = 'Groups_formulae_table',
range = 'A:I',
col_names = TRUE,
col_types = 'c',
na = ""
)
localities <- googlesheets4::read_sheet(
ss='19khDKV1CZ6w5cZr3thsDfd68LEY5cv8wIZMwYXL_xkk',
sheet = 'Locality_count_rruff_2020+Tetiana',
range = 'A:I',
col_names = TRUE,
col_types = 'c',
na = ""
)
names <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Names data',
col_names = TRUE,
col_types = 'c',
na = ""
)
ns <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
col_names = TRUE,
col_types = 'c',
na = ""
) %>%
select(Mineral_Name, Formula, Strunz)
mindex <- googlesheets4::read_sheet(
ss='19ezVwIShB11MFUokP5K7EEQyLFbRDzwnSNBgf5l7L5k',
sheet = 'Mindex_parse',
col_names = TRUE,
col_types = 'c',
na = ""
) %>%
select(`Mineral Name`, Synonyms, Varieties, `Strunz 8th edition`, `Dana 8th edition`, `Hey's 3rd edition`,
`Geological occurrence`, `Localities`, `URL to e-Rocks`, `References`, `Context`)
status <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Status data',
range = 'A:D',
col_names = TRUE,
col_types = 'c',
na = ""
)
?anti_join
missing <- status %>%
anti_join(e_rocks, by=c("Mineral_Name"="Title"))
missing <- e_rocks %>%
anti_join(status, by=c("Title"="Mineral_Name"))
View(missing)
#Load data ---------------------------------------------------------------------
e_rocks <- read.csv(paste0(path, 'minerals (10).csv'))
missing <- e_rocks %>%
anti_join(status, by=c("Title"="Mineral_Name"))
View(missing)
View(missing)
missing <- e_rocks %>%
anti_join(status, by=c("Title"="Mineral_Name")) %>%
filter(Class == 'Mineral')
View(missing)
missing <- e_rocks %>%
anti_join(status, by=c("Title"="Mineral_Name")) %>%
filter(Class == 'Mineral') %>%
filter(Title == "Mikehowardite")
View(missing)
missing <- e_rocks %>%
# anti_join(status, by=c("Title"="Mineral_Name")) %>%
filter(Class == 'Mineral') %>%
filter(Title == "Mikehowardite")
View(missing)
missing <- e_rocks %>%
# anti_join(status, by=c("Title"="Mineral_Name")) %>%
filter(Class == 'Mineral') %>%
filter(Title == "AliceWilsonite-(YCe)")
missing <- e_rocks %>%
# anti_join(status, by=c("Title"="Mineral_Name")) %>%
filter(Class == 'Mineral') %>%
filter(str_detect(Title, 'Alice'))
View(missing)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL")
rm(list=ls())
path <- 'export_e-Rocks/'
e_rocks <- read.csv(paste0(path, 'minerals (10).csv'))
# select(Title, Nid)
status <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Status data',
range = 'A:D',
col_names = TRUE,
col_types = 'c',
na = ""
)
missing <- e_rocks %>%
anti_join(status, by=c("Title"="Mineral_Name"))
View(missing)
write_csv(missing, 'missing.csv', na='', quote_escape = "double")
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/post-doc/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
setwd("~/GP-minerals/R scripts/export_to_SQL/")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Names data',
#range = 'A:AY',
col_names = TRUE,
col_types = 'c',
na = ""
)
stats <- initial %>%
select(Mineral_Name, discovery_year_min) %>%
group_by(discovery_year_min) %>%
summarise(counts = n_distinct(Mineral_Name)) %>%
arrange(discovery_year_min)
View(stats)
stats <- initial %>%
select(Mineral_Name, discovery_year_min) %>%
group_by(discovery_year_min) %>%
summarise(counts = n_distinct(Mineral_Name)) %>%
arrange(counts)
View(stats)
stats <- initial %>%
select(Mineral_Name, discovery_year_min) %>%
group_by(discovery_year_min) %>%
summarise(counts = n_distinct(Mineral_Name)) %>%
arrange(discovery_year_min)
View(stats)
