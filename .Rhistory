data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ str_split(x, ', ') }) %>%
unnest(cols = c(`Cation A1`, `Cation A2`, `Cation A3`, `Cation A4`, `Cation A5`,
`Cation A6`, `Cation A7`, `Cation A8`, `Cation A9`, `Cation B1`,
`Cation B2`, `Cation B3`, `Cation B4`))
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ str_split(x, ', ') }) %>%
unnest(cols = c(`Cation A1`, `Cation A2`, `Cation A3`, `Cation A4`, `Cation A5`,
`Cation A6`, `Cation A7`, `Cation A8`, `Cation A9`, `Cation B1`))
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ str_split(x, ', ') }) %>%
unnest(cols = c(`Cation A1`, `Cation A2`, `Cation A3`, `Cation A4`, `Cation A5`,
`Cation A6`, `Cation A7`, `Cation A8`, `Cation A9`))
data$`Cation B1`
data$`Cation A1`
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ list(str_split(x, ', ')) })
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ list(str_split(x, ', ')) })
View(initial)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) })
View(data)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unnest(cols = c(`Cation A1`, `Cation A2`, `Cation A3`, `Cation A4`, `Cation A5`,
`Cation A6`, `Cation A7`, `Cation A8`, `Cation A9`, `Cation B1`,
`Cation B2`, `Cation B3`, `Cation B4`, `Cation B5`, `Cation B6`,
`Cation C1`, `Cation C2`, `Cation C3`, `Cation C4`, `Cation C5`,
`Cation C6`, `Cation D1`, `Cation D2`, `Cation D3`, `Cation D4`,
`Cation E1`, `Cation E2`, `Cation E3`, `Cation E4`, `Cation F1`,
`Cation F2`, X1, `X1-a`, `X1-b`, `X1-c`, `X2-a`, `X2-b`,
X3, `Y1-a`, `Y1-b`, `Y1-c`, `Y1-d`, Y2, `Y2-a`, Y3, `Y3-a`,
Z1, Z2, Z3, Z4, Z5, Z6, W1, W2, W3, V1, V2))
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unnest()
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop()
unchop(vars(!contains(c('Charge')))
unchop(vars(!contains(c('Charge'))
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(vars(!contains(c('Charge'))))
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(!contains(c('Charge')))
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(!contains(c('Charge')), keep_empty = TRUE)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(!contains(c('Charge')), keep_empty = FALSE)
data
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(`Cation A1`)
View(data)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A1`) %>%
cols = c(`Cation A1`, `Cation A2`, `Cation A3`, `Cation A4`, `Cation A5`,
`Cation A6`, `Cation A7`, `Cation A8`, `Cation A9`, `Cation B1`,
`Cation B2`, `Cation B3`, `Cation B4`, `Cation B5`, `Cation B6`,
`Cation C1`, `Cation C2`, `Cation C3`, `Cation C4`, `Cation C5`,
`Cation C6`, `Cation D1`, `Cation D2`, `Cation D3`, `Cation D4`,
`Cation E1`, `Cation E2`, `Cation E3`, `Cation E4`, `Cation F1`,
`Cation F2`, X1, `X1-a`, `X1-b`, `X1-c`, `X2-a`, `X2-b`,
X3, `Y1-a`, `Y1-b`, `Y1-c`, `Y1-d`, Y2, `Y2-a`, Y3, `Y3-a`,
Z1, Z2, Z3, Z4, Z5, Z6, W1, W2, W3, V1, V2)
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A2`) %>%
unchop(`Cation A3`) %>%
unchop(`Cation A4`) %>%
unchop(`Cation A5`) %>%
unchop(`Cation A6`) %>%
unchop(`Cation A7`) %>%
unchop(`Cation A8`) %>%
unchop(`Cation A9`) %>%
unchop(`Cation B1`)
View(data)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unnest_auto()
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unnest_auto()
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(cols = c(`Cation A1`, `Cation A2`, `Cation A3`, `Cation A4`, `Cation A5`,
`Cation A6`, `Cation A7`, `Cation A8`, `Cation A9`, `Cation B1`,
`Cation B2`, `Cation B3`, `Cation B4`, `Cation B5`, `Cation B6`,
`Cation C1`, `Cation C2`, `Cation C3`, `Cation C4`, `Cation C5`,
`Cation C6`, `Cation D1`, `Cation D2`, `Cation D3`, `Cation D4`,
`Cation E1`, `Cation E2`, `Cation E3`, `Cation E4`, `Cation F1`,
`Cation F2`, X1, `X1-a`, `X1-b`, `X1-c`, `X2-a`, `X2-b`,
X3, `Y1-a`, `Y1-b`, `Y1-c`, `Y1-d`, Y2, `Y2-a`, Y3, `Y3-a`,
Z1, Z2, Z3, Z4, Z5, Z6, W1, W2, W3, V1, V2))
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(cols = c(`Cation A1`, `Cation A2`, `Cation A3`, `Cation A4`, `Cation A5`,
`Cation A6`, `Cation A7`, `Cation A8`, `Cation A9`))
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) })
data
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate(`Cation A1` = str_split(`Cation A1`, ', '))
data
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A2`) %>%
unchop(`Cation A3`) %>%
unchop(`Cation A4`) %>%
unchop(`Cation A5`) %>%
unchop(`Cation A6`) %>%
unchop(`Cation A7`) %>%
unchop(`Cation A8`) %>%
unchop(`Cation A9`) %>%
unchop(`Cation B1`) %>%
unchop(`Cation B2`) %>%
unchop(`Cation B3`) %>%
unchop(`Cation B4`) %>%
unchop(`Cation B5`) %>%
unchop(`Cation B6`) %>%
unchop(`Cation C1`) %>%
unchop(`Cation C2`) %>%
unchop(`Cation C3`) %>%
unchop(`Cation C4`) %>%
unchop(`Cation C5`) %>%
unchop(`Cation C6`) %>%
unchop(`Cation D1`) %>%
unchop(`Cation D2`) %>%
unchop(`Cation D3`) %>%
unchop(`Cation D4`) %>%
unchop(`Cation E1`) %>%
unchop(`Cation E2`) %>%
unchop(`Cation E3`) %>%
unchop(`Cation E4`) %>%
unchop(`Cation F1`) %>%
unchop(`Cation F2`) %>%
unchop(`Cation X1`) %>%
unchop(`Cation X1-a`) %>%
unchop(`Cation X1-b`) %>%
unchop(`Cation X1-c`) %>%
unchop(`Cation X2-a`) %>%
unchop(`Cation X2-b`) %>%
unchop(`Cation X3`) %>%
unchop(`Cation Y1-a`) %>%
unchop(`Cation Y1-b`) %>%
unchop(`Cation Y1-c`) %>%
unchop(`Cation Y1-d`) %>%
unchop(`Cation Y2`) %>%
unchop(`Cation Y2-a`) %>%
unchop(`Cation Y3`) %>%
unchop(`Cation Y3-a`) %>%
unchop(`Cation Z1`) %>%
unchop(`Cation Z2`) %>%
unchop(`Cation Z3`) %>%
unchop(`Cation Z4`) %>%
unchop(`Cation Z5`) %>%
unchop(`Cation Z6`) %>%
unchop(`Cation W1`) %>%
unchop(`Cation W2`) %>%
unchop(`Cation W3`) %>%
unchop(`Cation V1`) %>%
unchop(`Cation V2`)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A2`) %>%
unchop(`Cation A3`) %>%
unchop(`Cation A4`) %>%
unchop(`Cation A5`) %>%
unchop(`Cation A6`) %>%
unchop(`Cation A7`) %>%
unchop(`Cation A8`) %>%
unchop(`Cation A9`) %>%
unchop(`Cation B1`) %>%
unchop(`Cation B2`) %>%
unchop(`Cation B3`) %>%
unchop(`Cation B4`) %>%
unchop(`Cation B5`) %>%
unchop(`Cation B6`) %>%
unchop(`Cation C1`) %>%
unchop(`Cation C2`) %>%
unchop(`Cation C3`) %>%
unchop(`Cation C4`) %>%
unchop(`Cation C5`) %>%
unchop(`Cation C6`) %>%
unchop(`Cation D1`) %>%
unchop(`Cation D2`) %>%
unchop(`Cation D3`) %>%
unchop(`Cation D4`) %>%
unchop(`Cation E1`) %>%
unchop(`Cation E2`) %>%
unchop(`Cation E3`) %>%
unchop(`Cation E4`) %>%
unchop(`Cation F1`) %>%
unchop(`Cation F2`) %>%
unchop(`X1`) %>%
unchop(`Cation X1-a`) %>%
unchop(`Cation X1-b`) %>%
unchop(`Cation X1-c`) %>%
unchop(`Cation X2-a`) %>%
unchop(`Cation X2-b`) %>%
unchop(`Cation X3`) %>%
unchop(`Cation Y1-a`) %>%
unchop(`Cation Y1-b`) %>%
unchop(`Cation Y1-c`) %>%
unchop(`Cation Y1-d`) %>%
unchop(`Cation Y2`) %>%
unchop(`Cation Y2-a`) %>%
unchop(`Cation Y3`) %>%
unchop(`Cation Y3-a`) %>%
unchop(`Cation Z1`) %>%
unchop(`Cation Z2`) %>%
unchop(`Cation Z3`) %>%
unchop(`Cation Z4`) %>%
unchop(`Cation Z5`) %>%
unchop(`Cation Z6`) %>%
unchop(`Cation W1`) %>%
unchop(`Cation W2`) %>%
unchop(`Cation W3`) %>%
unchop(`Cation V1`) %>%
unchop(`Cation V2`)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
unchop(`Cation A1`) %>%
unchop(`Cation A2`) %>%
unchop(`Cation A3`) %>%
unchop(`Cation A4`) %>%
unchop(`Cation A5`) %>%
unchop(`Cation A6`) %>%
unchop(`Cation A7`) %>%
unchop(`Cation A8`) %>%
unchop(`Cation A9`) %>%
unchop(`Cation B1`) %>%
unchop(`Cation B2`) %>%
unchop(`Cation B3`) %>%
unchop(`Cation B4`) %>%
unchop(`Cation B5`) %>%
unchop(`Cation B6`) %>%
unchop(`Cation C1`) %>%
unchop(`Cation C2`) %>%
unchop(`Cation C3`) %>%
unchop(`Cation C4`) %>%
unchop(`Cation C5`) %>%
unchop(`Cation C6`) %>%
unchop(`Cation D1`) %>%
unchop(`Cation D2`) %>%
unchop(`Cation D3`) %>%
unchop(`Cation D4`) %>%
unchop(`Cation E1`) %>%
unchop(`Cation E2`) %>%
unchop(`Cation E3`) %>%
unchop(`Cation E4`) %>%
unchop(`Cation F1`) %>%
unchop(`Cation F2`) %>%
unchop(`X1`) %>%
unchop(`X1-a`) %>%
unchop(`X1-b`) %>%
unchop(`X1-c`) %>%
unchop(`X2-a`) %>%
unchop(`X2-b`) %>%
unchop(`X3`) %>%
unchop(`Y1-a`) %>%
unchop(`Y1-b`) %>%
unchop(`Y1-c`) %>%
unchop(`Y1-d`) %>%
unchop(`Y2`) %>%
unchop(`Y2-a`) %>%
unchop(`Y3`) %>%
unchop(`Y3-a`) %>%
unchop(`Z1`) %>%
unchop(`Z2`) %>%
unchop(`Z3`) %>%
unchop(`Z4`) %>%
unchop(`Z5`) %>%
unchop(`Z6`) %>%
unchop(`W1`) %>%
unchop(`W2`) %>%
unchop(`W3`) %>%
unchop(`V1`) %>%
unchop(`V2`)
View(data)
data %>%
distinct()
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) })
View(data)
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(list(x)) })
View(data)
View(data)
data
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) }) %>%
mutate_at(vars(!contains(c('Charge'))), list)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(str_split(x, ', ')) })
View(data)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(ifelse(is.na(x), NA, str_split(x, ', '))) }) %>%
unchop(cols = !contains(c('Index', 'Charge', 'Name')))
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(ifelse(is.na(x), NA, str_split(x, ', '))) }) %>%
unchop(cols = all_vars())
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(ifelse(is.na(x), NA, str_split(x, ', '))) }) %>%
unchop()
View(data)
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(ifelse(is.na(x), NA_character_, str_split(x, ', '))) }) %>%
unchop()
View(data)
unchop(cols = vars(!contains(c('Charge')))
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(ifelse(is.na(x), NA_character_, str_split(x, ', '))) }) %>%
unchop(cols = vars(!contains(c('Charge'))))
# concat ion column with charge
data <- initial %>%
select(!c('Supergroup','Group','Subgroup','Aliases','Series','Chemical_label',
'Structural_label','Minerals_Names','Note','Index','Relation_name','Formulae')) %>%
select(!matches('Index')) %>%
mutate_at(vars(!contains(c('Charge'))), .funs = function(x){ return(ifelse(is.na(x), NA_character_, str_split(x, ', '))) }) %>%
unchop(cols = !contains(c('Charge')))
initial <- googlesheets4::read_sheet(
ss='1Wo6n1xggXkITCCApdt_tLsNHOKMxyOgsMqSVpRecYsE',
sheet = 'Groups_formulae_table',
range = 'B:GB',
col_names = TRUE,
col_types = 'c',
na = ""
)
data <- initial %>%
select(!c(Index, Relation_name, Chemical_label, Structural_label)) %>%
filter(is.na(Group) | !str_detect(Group, '^\"'))
# turn hierarchy to one level -------------------------------------------------
supergroups <- data %>%
filter(!is.na(Supergroup) & is.na(Group) & is.na(Subgroup) & is.na(Aliases) & is.na(Series) & is.na(Minerals_Names)) %>%
select(!c(Group, Subgroup, Aliases, Series, Minerals_Names)) %>%
rename('Name' = 'Supergroup') %>%
mutate(type = paste0('Supergroup'))
groups <- data %>%
filter(!is.na(Group) & is.na(Subgroup) & is.na(Aliases) & is.na(Series) & is.na(Minerals_Names)) %>%
select(!c(Supergroup, Subgroup, Aliases, Series, Minerals_Names)) %>%
rename('Name' = 'Group') %>%
mutate(type = paste0('Group'))
subgroups <- data %>%
filter(!is.na(Subgroup) & is.na(Aliases) & is.na(Series) & is.na(Minerals_Names)) %>%
select(!c(Supergroup, Group, Aliases, Series, Minerals_Names)) %>%
rename('Name' = 'Subgroup') %>%
mutate(type = paste0('Subgroup'))
roots <- data %>%
filter(!is.na(Aliases) & is.na(Series) & is.na(Minerals_Names)) %>%
select(!c(Supergroup, Group, Subgroup, Series, Minerals_Names)) %>%
rename('Name' = 'Aliases') %>%
mutate(type = paste0('Root'))
series <- data %>%
filter(!is.na(Series) & is.na(Minerals_Names)) %>%
select(!c(Supergroup, Group, Aliases, Subgroup, Minerals_Names)) %>%
rename('Name' = 'Series') %>%
mutate(type = paste0('Serie'))
minerals <- data %>%
filter(!is.na(Minerals_Names)) %>%
select(!c(Supergroup, Group, Aliases, Subgroup, Series)) %>%
rename('Name' = 'Minerals_Names') %>%
mutate(type = paste0('Mineral'))
data <-
bind_rows(supergroups, groups, subgroups, roots, series, minerals) %>%
distinct(Name, .keep_all = TRUE)
rm(list = c('supergroups', 'groups', 'subgroups', 'roots', 'series', 'minerals'))
View(data)
data %>%
merge_ions('A')
output <- data %>%
merge_ions('A')
View(output)
