mutate(space_group_name=str_split(`Space group`, ', |;|,')) %>%
unchop(space_group_name, keep_empty = TRUE) %>%
left_join(crystal_systems_list, by=c('Crystal System' = 'crystal_system_name'), copy=TRUE) %>%
left_join(space_groups_list, by='space_group_name', copy=TRUE) %>%
left_join(ns_space_groups_list, by=c('space_group_name'='ns_space_group_name'), copy=TRUE) %>%
rename(space_group_id=space_group_id.x, mineral_name=`Mineral_Name`, alpha=α, beta=β, gamma=γ, z=Z) %>%
mutate(space_group_id=ifelse(!is.na(ns_space_group_id), space_group_id.y, space_group_id)) %>%
inner_join(ms_species, by='mineral_name', copy=TRUE) %>%
select(mineral_id, crystal_system_id, crystal_class_id, space_group_id, ns_space_group_id, a, b, c, alpha, beta, gamma, z)
# LOAD into DB
dbSendQuery(conn, "delete from ms_species_crystal;")
dbWriteTable(conn, "ms_species_crystal", ms_species_crystal, append=TRUE)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
ion_class_list = tbl(conn, 'ion_class_list')
ion_subclass_list = tbl(conn, 'ion_subclass_list')
ion_group_list = tbl(conn, 'ion_group_list')
ion_subgroup_list = tbl(conn, 'ion_subgroup_list')
ion_type_list = tbl(conn, 'ion_type_list')
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:U',
col_names = TRUE,
col_types = 'c',
na = ""
)
View(initial)
ion_class_list = tbl(conn, 'ion_class_list')
ion_subclass_list = tbl(conn, 'ion_subclass_list')
ion_group_list = tbl(conn, 'ion_group_list')
ion_subgroup_list = tbl(conn, 'ion_subgroup_list')
ion_type_list = tbl(conn, 'ion_type_list')
ion_list <- initial %>%
group_by(formula) %>%
filter(n() > 1)
View(ion_list)
ion_list <- initial %>%
group_by(formula) %>%
filter(n() > 1) %>%
arrange(formula, ion_type_name)
View(ion_list)
# Parse classes ----------------------------------------------------------------
io_class <- initial %>%
select(ion_class_name) %>%
distinct(ion_class_name) %>%
arrange(ion_class_name) %>%
mutate(ion_class_id = row_number()) %>%
select(ion_class_id, ion_class_name)
initial
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:U',
col_names = TRUE,
col_types = 'c',
na = ""
)
# Parse classes ----------------------------------------------------------------
ion_class_list <- initial %>%
select(ion_class_name) %>%
distinct(ion_class_name) %>%
arrange(ion_class_name) %>%
mutate(ion_class_id = row_number()) %>%
select(ion_class_id, ion_class_name)
View(ion_class_list)
ion_subclass_list <- initial %>%
select(ion_subclass_name) %>%
distinct(ion_subclass_name) %>%
filter(!is.na(ion_subclass_name)) %>%
arrange(ion_subclass_name) %>%
mutate(ion_subclass_id = row_number()) %>%
select(ion_subclass_id, ion_subclass_name)
View(ion_subclass_list)
ion_group_list <- initial %>%
select(ion_group_name) %>%
distinct(ion_group_name) %>%
filter(!is.na(ion_group_name)) %>%
arrange(ion_group_name) %>%
mutate(ion_group_id = row_number()) %>%
select(ion_group_id, ion_group_name)
View(ion_group_list)
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:U',
col_names = TRUE,
col_types = 'c',
na = ""
)
ion_group_list <- initial %>%
select(ion_group_name) %>%
distinct(ion_group_name) %>%
filter(!is.na(ion_group_name)) %>%
arrange(ion_group_name) %>%
mutate(ion_group_id = row_number()) %>%
select(ion_group_id, ion_group_name)
ion_subgroup_list <- initial %>%
select(ion_subgroup_name) %>%
distinct(ion_subgroup_name) %>%
filter(!is.na(ion_subgroup_name)) %>%
arrange(ion_subgroup_name) %>%
mutate(ion_subgroup_id = row_number()) %>%
select(ion_subgroup_id, ion_subgroup_name)
View(ion_subgroup_list)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ion_class_list WHERE 1=1;")
ion_list <- initial %>%
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ion_list;")
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ion_class_list WHERE 1=1;")
dbWriteTable(conn, "ion_class_list", ion_class_list, append=TRUE)
dbSendQuery(conn, "DELETE FROM ion_subclass_list;")
dbWriteTable(conn, "ion_subclass_list", ion_subclass_list, append=TRUE)
dbSendQuery(conn, "DELETE FROM ion_group_list;")
dbWriteTable(conn, "ion_group_list", ion_group_list, append=TRUE)
dbSendQuery(conn, "DELETE FROM ion_group_list;")
dbWriteTable(conn, "ion_group_list", ion_group_list, append=TRUE)
dbSendQuery(conn, "DELETE FROM ion_group_list;")
dbWriteTable(conn, "ion_group_list", ion_group_list, append=TRUE)
dbSendQuery(conn, "DELETE FROM ion_subgroup_list;")
dbWriteTable(conn, "ion_subgroup_list", ion_subgroup_list, append=TRUE)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:U',
col_names = TRUE,
col_types = 'c',
na = ""
)
ion_class_list = tbl(conn, 'ion_class_list')
ion_subclass_list = tbl(conn, 'ion_subclass_list')
ion_group_list = tbl(conn, 'ion_group_list')
ion_subgroup_list = tbl(conn, 'ion_subgroup_list')
ion_type_list = tbl(conn, 'ion_type_list')
View(ion_list)
View(initial)
ion_list <- initial %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE)
View(ion_list)
dbSendQuery?
?dbSendQuery
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_class_list;")
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_list;")
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_class_list;")
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_class_list CASCADE;")
dbWriteTable(conn, "ion_class_list", ion_class_list, append=TRUE)
ion_class_list
# Parse classes ----------------------------------------------------------------
ion_class_list <- initial %>%
select(ion_class_name) %>%
distinct(ion_class_name) %>%
arrange(ion_class_name) %>%
mutate(ion_class_id = row_number()) %>%
select(ion_class_id, ion_class_name)
dbWriteTable(conn, "ion_subclass_list", ion_subclass_list, append=TRUE)
dbWriteTable(conn, "ion_class_list", ion_class_list, append=TRUE)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_class_list CASCADE RESTART IDENTITY;")
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_class_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_class_list", ion_class_list, append=TRUE)
# Parse classes ----------------------------------------------------------------
ion_class_list <- initial %>%
select(ion_class_name) %>%
distinct(ion_class_name) %>%
arrange(ion_class_name) %>%
mutate(ion_class_id = row_number()) %>%
select(ion_class_name)
ion_subclass_list <- initial %>%
select(ion_subclass_name) %>%
distinct(ion_subclass_name) %>%
filter(!is.na(ion_subclass_name)) %>%
arrange(ion_subclass_name) %>%
mutate(ion_subclass_id = row_number()) %>%
select(ion_subclass_name)
ion_group_list <- initial %>%
select(ion_group_name) %>%
distinct(ion_group_name) %>%
filter(!is.na(ion_group_name)) %>%
arrange(ion_group_name) %>%
mutate(ion_group_id = row_number()) %>%
select(ion_group_name)
ion_subgroup_list <- initial %>%
select(ion_subgroup_name) %>%
distinct(ion_subgroup_name) %>%
filter(!is.na(ion_subgroup_name)) %>%
arrange(ion_subgroup_name) %>%
mutate(ion_subgroup_id = row_number()) %>%
select(ion_subgroup_name)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_class_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_class_list", ion_class_list, append=TRUE)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_class_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_class_list", ion_class_list, append=TRUE)
dbSendQuery(conn, "TRUNCATE TABLE ion_subclass_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_subclass_list", ion_subclass_list, append=TRUE)
dbSendQuery(conn, "TRUNCATE TABLE ion_group_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_group_list", ion_group_list, append=TRUE)
dbSendQuery(conn, "TRUNCATE TABLE ion_subgroup_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_subgroup_list", ion_subgroup_list, append=TRUE)
ion_class_list = tbl(conn, 'ion_class_list')
ion_subclass_list = tbl(conn, 'ion_subclass_list')
ion_group_list = tbl(conn, 'ion_group_list')
ion_subgroup_list = tbl(conn, 'ion_subgroup_list')
ion_type_list = tbl(conn, 'ion_type_list')
View(initial)
colnames(initial)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:X',
col_names = TRUE,
col_types = 'c',
na = ""
)
colnames(initial)
# Parse ions ----------------------------------------------------------------
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_name, ion_subclass_name,
ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE)
View(ion_list)
# Parse ions ----------------------------------------------------------------
ion_id serial primary key,
ion_type_id int references ion_type_list(ion_type_id) on update cascade,
ion_name TEXT NOT NULL,
formula varchar(100) not null,
formula_with_oxidation varchar(100) default null,
variety_of int references ion_list(ion_id) on update cascade,
expressed_as text default null,
ion_class_id int references ion_class_list(ion_class_id) on update cascade,
ion_subclass_id int references ion_subclass_list(ion_subclass_id) on update cascade,
ion_group_id int references ion_group_list(ion_group_id) on update cascade,
ion_subgroup_id int references ion_subgroup_list(ion_subgroup_id) on update cascade,
structure_description TEXT DEFAULT NULL,
geometry TEXT DEFAULT null,
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_name, ion_subclass_name,
ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
select(ion_type_id, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry)
View(ion_list)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_list", ion_list, append=TRUE)
variety_of_check <- initial %>%
select(formula, variety_of) %>%
filter(!is.na(variety_of))
View(variety_of_check)
variety_of_check <- initial %>%
select(variety_of) %>%
filter(!is.na(variety_of))
View(variety_of_check)
variety_of_check <- initial %>%
select(variety_of) %>%
distinct(variety_of)
View(variety_of_check)
variety_of_check <- initial %>%
select(variety_of) %>%
distinct(variety_of) %>%
filter(!is.na(variety_of)) %>%
left_join(initial, by=c('variety_of' = 'formula'))
View(variety_of_check)
initial <- initial %>%
mutate(ion_id=row_number())
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_name, ion_subclass_name,
ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial, by=c('formula' = 'variety_of'), copy=TRUE) %>%
select(ion_type_id, ion_name, formula, formula_with_oxidation, ion_id, expressed_as, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry) %>%
rename(variety_of = ion_id)
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_name, ion_subclass_name,
ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial, by=c('formula' = 'variety_of'), copy=TRUE) %>%
select(ion_type_id, ion_name.x, formula, formula_with_oxidation, ion_id, expressed_as, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry) %>%
rename(variety_of = ion_id, ion_name=ion_name.x)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:X',
col_names = TRUE,
col_types = 'c',
na = ""
)
initial_ions <- initial %>%
select(formula) %>%
mutate(ion_id=row_number())
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_name, ion_subclass_name,
ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial_ions, by=c('formula' = 'variety_of'), copy=TRUE) %>%
select(ion_type_id, ion_name, formula, formula_with_oxidation, ion_id, expressed_as, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry) %>%
rename(variety_of = ion_id)
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_name, ion_subclass_name,
ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial_ions, by=c('formula' = 'variety_of'), copy=TRUE)
initial_ions
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, variety_of, expressed_as, ion_class_name, ion_subclass_name,
ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial_ions, by=c('variety_of'='formula'), copy=TRUE) %>%
select(ion_type_id, ion_name, formula, formula_with_oxidation, ion_id, expressed_as, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry) %>%
rename(variety_of = ion_id)
View(ion_list)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_list", ion_list, append=TRUE)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_list", ion_list, append=TRUE)
dbDisconnect(conn)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:X',
col_names = TRUE,
col_types = 'c',
na = ""
)
variety_of_check <- initial %>%
select(variety_of) %>%
distinct(variety_of) %>%
filter(!is.na(variety_of)) %>%
left_join(initial, by=c('variety_of' = 'formula'))
initial_ions <- initial %>%
select(formula) %>%
mutate(ion_id=row_number())
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:X',
col_names = TRUE,
col_types = 'c',
na = ""
)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:X',
col_names = TRUE,
col_types = 'c',
na = ""
)
variety_of_check <- initial %>%
select(variety_of) %>%
distinct(variety_of) %>%
filter(!is.na(variety_of)) %>%
left_join(initial, by=c('variety_of' = 'formula'))
initial_ions <- initial %>%
select(formula) %>%
mutate(ion_id=row_number())
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, overall_charge, variety_of, expressed_as, element_or_sulfide,
ion_class_name, ion_subclass_name, ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial_ions, by=c('variety_of'='formula'), copy=TRUE) %>%
select(ion_type_id, ion_name, formula, formula_with_oxidation, overall_charge, ion_id, expressed_as, element_or_sulfide, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry) %>%
rename(variety_of = ion_id)
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
ion_class_list = tbl(conn, 'ion_class_list')
ion_subclass_list = tbl(conn, 'ion_subclass_list')
ion_group_list = tbl(conn, 'ion_group_list')
ion_subgroup_list = tbl(conn, 'ion_subgroup_list')
ion_type_list = tbl(conn, 'ion_type_list')
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, overall_charge, variety_of, expressed_as, element_or_sulfide,
ion_class_name, ion_subclass_name, ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial_ions, by=c('variety_of'='formula'), copy=TRUE) %>%
select(ion_type_id, ion_name, formula, formula_with_oxidation, overall_charge, ion_id, expressed_as, element_or_sulfide, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry) %>%
rename(variety_of = ion_id)
View(ion_list)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_list", ion_list, append=TRUE)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Ions_data',
range = 'A:X',
col_names = TRUE,
col_types = 'c',
na = ""
)
variety_of_check <- initial %>%
select(variety_of) %>%
distinct(variety_of) %>%
filter(!is.na(variety_of)) %>%
left_join(initial, by=c('variety_of' = 'formula'))
initial_ions <- initial %>%
select(formula) %>%
mutate(ion_id=row_number())
ion_list <- initial %>%
select(ion_type_name, ion_name, formula, formula_with_oxidation, overall_charge, variety_of, expressed_as, element_or_sulfide,
ion_class_name, ion_subclass_name, ion_group_name, ion_subgroup_name, structure_description, geometry) %>%
left_join(ion_type_list, by='ion_type_name', copy=TRUE) %>%
left_join(ion_class_list, by='ion_class_name', copy=TRUE) %>%
left_join(ion_subclass_list, by='ion_subclass_name', copy=TRUE) %>%
left_join(ion_group_list, by='ion_group_name', copy=TRUE) %>%
left_join(ion_subgroup_list, by='ion_subgroup_name', copy=TRUE) %>%
left_join(initial_ions, by=c('variety_of'='formula'), copy=TRUE) %>%
select(ion_type_id, ion_name, formula, formula_with_oxidation, overall_charge, ion_id, expressed_as, element_or_sulfide, ion_class_id, ion_subclass_id,
ion_group_id, ion_subgroup_id, structure_description, geometry) %>%
rename(variety_of = ion_id)
# UPLOAD DATA TO DB
dbSendQuery(conn, "TRUNCATE TABLE ion_list RESTART IDENTITY CASCADE;")
dbWriteTable(conn, "ion_list", ion_list, append=TRUE)
# Disconnect from the DB
dbDisconnect(conn)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
