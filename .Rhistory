conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
crystal_classes_list <- tbl(conn, 'crystal_classes_list')
crystal_classes_list
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = "cccccc"
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
# PROCESS data -----------------------------------------------------------------
space_groups <-
initial %>%
select(`Space group`,`Class Name`) %>%
rename(space_group_name=`Space group`,crystal_class_name=`Class Name`) %>%
inner_join(crystal_classes_list, by='crystal_class_name', copy=TRUE) %>%
select(space_group_name,crystal_class_id) %>%
distinct() %>%
arrange(space_group_name)
View(space_groups)
# LOAD into DB
dbSendQuery(conn, "delete from space_groups_list;")
dbWriteTable(conn, "space_groups_list", space_groups, append=TRUE)
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
silicates_unique <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:B',
col_names = TRUE,
col_types = 'c',
na = ""
)
View(silicates_unique)
ns_silicates_theoretical <-
initial %>%
select(Mineral_Name, silicates_theoretical) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>% #parse anions_theoretical level
distinct(silicates_theoretical) %>%
arrange(silicates_theoretical)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
range = 'A:K',
col_names = TRUE,
col_types = 'c',
na = ""
)
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
range = 'A:K',
col_names = TRUE,
col_types = 'c',
na = ""
)
rlang::last_error()
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
range = 'A:K',
col_names = TRUE,
col_types = 'c',
na = ""
)
ns_silicates_theoretical <-
initial %>%
select(Mineral_Name, silicates_theoretical) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>% #parse anions_theoretical level
distinct(silicates_theoretical) %>%
arrange(silicates_theoretical)
View(ns_silicates_theoretical)
# silicates, present in Ions_database but absent in NS list
silicates_absent <-
silicates_unique %>%
anti_join(ns_silicates_theoretical, by = c('Ion' = 'silicates_theoretical'))
View(silicates_absent)
# EXPORT ms_species ------------------------------------------------------------
write_csv(silicates_absent, path = paste0(path, 'silicates_absent_in_NS.csv'), na='')
write_csv?
?write_csv
# EXPORT ms_species ------------------------------------------------------------
write_csv(silicates_absent, file = paste0(path, 'silicates_absent_in_NS.csv'), na='')
# silicates, present in Ions_database but absent in NS list
silicates_absent <-
ns_silicates_theoretical %>%
anti_join(silicates_unique, by = c('silicates_theoretical' = 'Ion'))
View(silicates_absent)
# EXPORT ms_species ------------------------------------------------------------
write_csv(silicates_absent, file = paste0(path, 'silicates_absent_in_IO.csv'), na='')
ions_duplicates <- silicates_unique %>%
group_by(Ion) %>%
filter(n()>1)
View(ions_duplicates)
# EXPORT ms_species ------------------------------------------------------------
write_csv(ions_duplicates, file = paste0(path, 'silicates_duplicates.csv'), na='')
View(ions_duplicates)
silicates_unique <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:H',
col_names = TRUE,
col_types = 'c',
na = ""
)
# silicates varieties, not present in silicate ions list
varieties_absent <- silicates_unique %>%
filter(`Variety of` in Ion)
# silicates varieties, not present in silicate ions list
varieties_absent <- silicates_unique %>%
select(Ion)
View(varieties_absent)
varieties_absent <- silicates_unique %>%
select(`Variety of`) %>%
distinct(`Variety of`)
# silicates varieties, not present in silicate ions list
varieties_absent <- silicates_unique %>%
select(`Variety of`) %>%
distinct(`Variety of`) %>%
anti_join(silicates_unique, by=c('Ion' = 'Variety of'))
silicates_unique
silicates_unique %>%
select(`Variety of`) %>%
distinct(`Variety of`) %>%
anti_join(silicates_unique, by=c('Ion' = 'Variety of'))
# silicates varieties, not present in silicate ions list
silicates <- silicates_unique %>%
select(Ion) %>%
distinct(Ion)
varieties_absent <- silicates_unique %>%
select(`Variety of`) %>%
distinct(`Variety of`) %>%
anti_join(silicates, by=c('Ion' = 'Variety of'))
varieties_absent <- silicates_unique %>%
select(`Variety of`) %>%
distinct(`Variety of`) %>%
anti_join(silicates_unique, by=c('Variety of'='Ion'))
View(varieties_absent)
# EXPORT ms_species ------------------------------------------------------------
write_csv(varieties_absent, file = paste0(path, 'varieties_absent.csv'), na='')
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
range = 'A:Q',
col_names = TRUE,
col_types = 'c',
na = ""
)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>% #parse anions_theoretical level
distinct(silicates_theoretical) %>%
arrange(silicates_theoretical)
View(ns_silicates)
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE)
View(ns_silicates)
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
distinct(silicates_theoretical)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
distinct(silicates_theoretical, .keep_all = TRUE) %>%
arrange(silicates_theoretical)
View(ns_silicates)
?distinct
initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = unique(CLASS))
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = paste0(unique(CLASS)))
View(ns_silicates)
?summarise
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = paste(unique(CLASS), collapse=';'))
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = paste(unique(CLASS), collapse='; '),
SUBCLASS = paste(unique(SUBCLASS), collapse='; '),
FAMILY = paste(unique(FAMILY), collapse='; '))
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = paste(unique(CLASS)),
SUBCLASS = paste(unique(SUBCLASS)),
FAMILY = paste(unique(FAMILY)))
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = unique(CLASS),
SUBCLASS = unique(SUBCLASS),
FAMILY = unique(FAMILY))
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = unique(CLASS)
)
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = unique(CLASS),
SUBCLASS = unique(SUBCLASS)),
FAMILY = unique(FAMILY))
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = unique(CLASS),
SUBCLASS = unique(SUBCLASS))
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY)
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
distinct()
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(is.na(Ion))
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(is.na(Ion)) %>%
distinct()
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY)
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(is.na(Ion))
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(!is.na(Ion))
is.na(NA)
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
distinct()
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
distinct() %>%
filter(is.na(Ion))
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
distinct() %>%
filter(is.na(silicates_theoretical))
View(ns_silicates)
# ADD class, subclass and family to silicates from NS sheet
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(!is.na(silicates_theoretical)) %>%
distinct()
View(ns_silicates)
silicates_unique <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:H',
col_names = TRUE,
col_types = 'c',
na = ""
)
silicates_unique <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:H',
col_names = TRUE,
col_types = 'c',
na = ""
)
googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:H',
col_names = TRUE,
col_types = 'c',
na = ""
)
silicates_unique <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:H',
col_names = TRUE,
col_types = 'c',
na = ""
)
#Load data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
range = 'A:Q',
col_names = TRUE,
col_types = 'c',
na = ""
)
View(silicates_unique)
silicates_unique <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:H',
col_names = TRUE,
col_types = 'c',
na = ""
)
# ADD class, subclass and family to silicates from NS sheet
silicates_unique <- silicates_unique %>%
distinct(Ion, .keep_all = T)
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(!is.na(silicates_theoretical)) %>%
distinct() %>%
inner_join(silicates_unique, by=c('silicates_theoretical' = 'Ion'))
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(!is.na(silicates_theoretical)) %>%
distinct()
ns_silicates <- initial %>%
select(silicates_theoretical, CLASS, SUBCLASS, FAMILY) %>%
mutate(silicates_theoretical = str_split(silicates_theoretical, ';')) %>%
unchop(silicates_theoretical, keep_empty = TRUE) %>%
group_by(silicates_theoretical) %>%
summarise(CLASS = CLASS,
SUBCLASS = SUBCLASS,
FAMILY = FAMILY) %>%
filter(!is.na(silicates_theoretical)) %>%
distinct() %>%
inner_join(silicates_unique, by=c('silicates_theoretical' = 'Ion'))
View(ns_silicates)
# EXPORT ms_species ------------------------------------------------------------
write_csv(ns_silicates, file = paste0(path, 'ns_silicates_cl.csv'), na='')
View(ns_silicates)
knitr::opts_chunk$set(echo = FALSE)
library(tiff)
install.packages(tiff)
install.packages('tiff')
install.packages('grid')
install.packages("grid")
install.packages("tiff")
knitr::opts_chunk$set(echo = FALSE)
library(grid)
grid.raster(readTIFF("./03_figures/graph.tiff"))
library(tiff)
library(tiff)
install.packages("tiff")
grid.raster(readTIFF("CGG_presentation/CGG_slide.tiff"))
library(tiff)
library(grid)
grid.raster(readTIFF("CGG_presentation/CGG_slide.tiff"))
grid.raster(readTIFF("CGG_presentation/CGG_slide.tif"))
grid.raster(readTIFF("./CGG_presentation/CGG_slide.tif"))
ls
rd
wd
getwd
getwd()
readTIFF("CGG_presentation/CGG_slide.tif")
readTIFF("/CGG_presentation/CGG_slide.tif")
readTIFF("../CGG_presentation/CGG_slide.tif")
readTIFF("./CGG_presentation/CGG_slide.tif")
readTIFF("./CGG_presentation/CGG_slide.tif")
grid.raster(readTIFF("./CGG_presentation/CGG_slide.tiff"))
grid.raster(readTIFF("./CGG_presentation/CGG_slide.tiff"))
grid.raster(readTIFF("CGG_presentation/CGG_slide.tiff"))
knittr
knitr::include_app()
