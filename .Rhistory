mutate(url_title=tolower(str_replace_all(Mineral_Name, '[()]', ''))) %>%
mutate(`URL to e-Rocks1` = ifelse(!is.na(Nid),paste0('https://e-rocks.com/minerals/',Nid,'/', url_title), NA)) %>%
mutate(`URL to e-Rocks` = ifelse(is.na(`URL to e-Rocks`),`URL to e-Rocks1`, `URL to e-Rocks`)) %>%
select(Mineral_Name, `Approval history`, Groups, Synonyms, Varieties, `Strunz 8th edition`, `Dana 8th edition`, Strunz,
`Hey's 3rd edition`, Formula, `Crystal System`, `Class Name`,
`H-M symbol`, `Space group`, `Non-standart settings`, Diaphaneity, color, Streak, Luster, Cleavage, Fracture,
Tenacity, Hardness, `Density measured`, `D(calc,)`, `Habit(main)`, `Geological occurrence`, `Localities`, `References`,
`Named for`, Index_Legend_Label, Index_Legend_Range, `URL to e-Rocks`, `Context`, `Groups Short`) %>%
rename(`Strunz 10th edition`=Strunz,`Optical Properties` = Diaphaneity, Colour=color, Lustre=Luster, `Density calculated` = `D(calc,)`,
Habit = `Habit(main)`, Distribution=Index_Legend_Label, `Distribution Range`=Index_Legend_Range)
View(mindex_out)
mindex_out <- mindex_out %>%
mutate(Hardness = str_replace(Hardness, ',', '.'))
View(mindex_out)
mindex_out <- mindex_out %>%
mutate(Hardness = str_replace_all(Hardness, ',', '.'),
`Density measured` = str_replace_all(`Density measured`, ',', '.'),
`Density calculated` = str_replace_all(`Density calculated`, ',', '.'))
View(mindex_out)
mindex_out[mindex_out==""]<-NA
write_csv(mindex_out, 'Mindex_24112020.csv', na='', quote_escape = "double")
library(tidyverse)
library(googlesheets4)
library(tidyjson)
library(DBI)
library(RCurl)
library("writexl")
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
source('functions.R')
#Load data ---------------------------------------------------------------------
e_rocks <- read.csv(paste0(path, 'minerals (5).csv')) %>%
select(Title, Nid)
status <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Status data',
range = 'A:D',
col_names = TRUE,
col_types = 'c',
na = ""
)
crystal <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Crystallography',
range = 'A:G',
col_names = TRUE,
col_types = 'c',
na = ""
)
physical <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Physical_properties',
range = 'A:V',
col_names = TRUE,
col_types = 'c',
na = ""
)
status <-
status %>%
filter(str_detect(all_indexes, '0.0')) %>%
select(Mineral_Name, IMA.Status) %>%
rename('Approval history' = IMA.Status)
groups <- googlesheets4::read_sheet(
ss='1Wo6n1xggXkITCCApdt_tLsNHOKMxyOgsMqSVpRecYsE',
sheet = 'Groups_formulae_table',
range = 'A:I',
col_names = TRUE,
col_types = 'c',
na = ""
)
localities <- googlesheets4::read_sheet(
ss='19khDKV1CZ6w5cZr3thsDfd68LEY5cv8wIZMwYXL_xkk',
sheet = 'Locality_count_rruff_2020+Tetiana',
range = 'A:I',
col_names = TRUE,
col_types = 'c',
na = ""
)
names <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Names data',
col_names = TRUE,
col_types = 'c',
na = ""
)
ns <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
col_names = TRUE,
col_types = 'c',
na = ""
) %>%
select(Mineral_Name, Formula, Strunz)
mindex <- googlesheets4::read_sheet(
ss='19ezVwIShB11MFUokP5K7EEQyLFbRDzwnSNBgf5l7L5k',
sheet = 'Mindex_parse',
col_names = TRUE,
col_types = 'c',
na = ""
) %>%
select(`Mineral Name`, Synonyms, Varieties, `Strunz 8th edition`, `Dana 8th edition`, `Hey's 3rd edition`,
`Geological occurrence`, `Localities`, `URL to e-Rocks`, `References`, `Context`)
# pre-parse groups ----
groups_parsed <- groups %>%
select(Minerals_Names, Supergroup, Group, Subgroup, Aliases, Series) %>%
group_by(Minerals_Names) %>%
summarise(Supergroup = paste(unique(Supergroup), collapse = ';'),
Group = paste(unique(Group), collapse = ';'),
Subgroup = paste(unique(Subgroup), collapse = ';'),
Aliases = paste(unique(Aliases), collapse = ';'),
Series = paste(unique(Series), collapse = ';')) %>%
mutate_all(~str_replace_all(.,'NA', NA_character_))
mindex_out <- status %>%
left_join(groups_parsed, by = c('Mineral_Name' = 'Minerals_Names')) %>%
unite('Groups',c('Supergroup', 'Group', 'Subgroup', 'Aliases', 'Series'), sep = ';', remove=F, na.rm=T) %>%
unite('Groups Short',c('Supergroup', 'Group', 'Series'), sep = ';', remove=T, na.rm=T) %>%
left_join(crystal) %>%
select(!Index) %>%
rename(`Non-standart settings` = Note) %>%
left_join(physical, by='Mineral_Name') %>%
select(!c(Index, all_indexes, discovery_year_min, VarKey)) %>%
mutate(Hardness = case_when(
H_min != H_max ~ paste0(H_min, '-', H_max),
H_min == H_max ~ paste0(H_min)
),
`Density measured` = case_when(
`D(meas,)_min` != `D(meas,)_max` ~ paste0(`D(meas,)_min`, '-', `D(meas,)_max`),
`D(meas,)_min` == `D(meas,)_max` ~ paste0(`D(meas,)_min`)
)) %>%
left_join(localities, by = c('Mineral_Name' = 'Name')) %>%
mutate(Index_Legend_Range = str_replace(Index_Legend_Range, '^\\(', '')) %>%
mutate(Index_Legend_Range = str_replace(Index_Legend_Range, '\\)$', '')) %>%
left_join(names, by = 'Mineral_Name') %>%
mutate_all(~str_replace_na(., "")) %>%
mutate(`Named for` = case_when(
Person != '' ~ paste0(Person, ' (', ifelse(Nationality == '', '', paste0(Nationality, '; ')),
ifelse(Born == '', '', paste0(Born, ' - ', Died)), ') ', Role),
Type != '' ~ paste0(Type, ': ', LOCALITY, ', ', Country, ifelse(Note == '', '', paste0('; ', Note))),
LANGUAGE != '' ~ paste0('After ', LANGUAGE, ifelse(Stem1 == '', '', paste0('; ', Stem1)),
ifelse(Stem2 == '', '', paste0(', ', Stem2)),
ifelse(Stem3 == '', '', paste0(', ', Stem3)),
ifelse(Meaning == '', '', paste0('; Note: ', Meaning))),
CHEMISTRY != '' ~ paste0(CHEMISTRY, ifelse(`Elements/Ions` == '', '', paste0('. Elements/Ions: ', `Elements/Ions`))),
`GROUP/INSTITUTION` != '' ~ paste0(`GROUP/INSTITUTION`, ifelse(About == '', '', paste0(' - ', About))),
other != '' ~ paste0(other, ifelse(note == '', '', paste0(' - ', note)))
)) %>%
left_join(ns, by='Mineral_Name') %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\_(.*?)\\_',"<sub>\\1</sub>"), NA)) %>%
mutate(Formula = ifelse(!is.na(Formula), str_replace_all(Formula, '\\^(.*?)\\^',"<sup>\\1</sup>"), NA)) %>%
select(Mineral_Name, `Approval history`, Groups, Strunz, Formula, `Crystal System`, `Class Name`,
`H-M symbol`, `Space group`, `Non-standart settings`, Diaphaneity, color, Streak, Luster, Cleavage, Fracture,
Tenacity, Hardness, `Density measured`, `D(calc,)`, `Habit(main)`, `Named for`, Index_Legend_Label, Index_Legend_Range,
`Groups Short`) %>%
left_join(mindex, by = c('Mineral_Name' = 'Mineral Name')) %>%
left_join(e_rocks, by=c('Mineral_Name'='Title')) %>%
mutate(url_title=tolower(str_replace_all(Mineral_Name, '[()]', ''))) %>%
mutate(`URL to e-Rocks1` = ifelse(!is.na(Nid),paste0('https://e-rocks.com/node/',Nid), NA)) %>%
mutate(`URL to e-Rocks` = ifelse(is.na(`URL to e-Rocks`),`URL to e-Rocks1`, `URL to e-Rocks`)) %>%
select(Mineral_Name, `Approval history`, Groups, Synonyms, Varieties, `Strunz 8th edition`, `Dana 8th edition`, Strunz,
`Hey's 3rd edition`, Formula, `Crystal System`, `Class Name`,
`H-M symbol`, `Space group`, `Non-standart settings`, Diaphaneity, color, Streak, Luster, Cleavage, Fracture,
Tenacity, Hardness, `Density measured`, `D(calc,)`, `Habit(main)`, `Geological occurrence`, `Localities`, `References`,
`Named for`, Index_Legend_Label, Index_Legend_Range, `URL to e-Rocks`, `Context`, `Groups Short`) %>%
rename(`Strunz 10th edition`=Strunz,`Optical Properties` = Diaphaneity, Colour=color, Lustre=Luster, `Density calculated` = `D(calc,)`,
Habit = `Habit(main)`, Distribution=Index_Legend_Label, `Distribution Range`=Index_Legend_Range)
mindex_out <- mindex_out %>%
mutate(Hardness = str_replace_all(Hardness, ',', '.'),
`Density measured` = str_replace_all(`Density measured`, ',', '.'),
`Density calculated` = str_replace_all(`Density calculated`, ',', '.'))
mindex_out[mindex_out==""]<-NA
View(mindex_out)
write_csv(mindex_out, 'Mindex_24112020.csv', na='', quote_escape = "double")
library(tidyverse)
library(googlesheets4)
library(DBI)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- 'export/'
initial <- googlesheets4::read_sheet(
ss='1QA-Y229WNurpJA7KYmpiU2jn-_YJmrUfLq_lv0VFpXg',
sheet = 'Nickel-Strunz',
range = 'C:Q',
col_names = TRUE,
na = ""
) %>% select(Strunz, CLASS, SUBCLASS, FAMILY)
conn <- dbConnect(RPostgres::Postgres(),dbname = 'master',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
ns_class <- initial %>%
select(Strunz, CLASS) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+')) %>%
distinct() %>%
filter(!is.na(CLASS)) %>%
arrange(Strunz) %>%
rename(id_class = Strunz, description = CLASS)
View(ns_class)
ns_subclass <- initial %>%
select(Strunz, SUBCLASS) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+\\.[A-Z]')) %>%
separate(col = Strunz, sep = '\\.',into = c('ns_class','ns_subclass')) %>%
distinct(.keep_all = FALSE) %>%
arrange(ns_class, ns_subclass) %>%
filter(!is.na(SUBCLASS)) %>%
rename(description = SUBCLASS, id_class=ns_class, id_subclass=ns_subclass)
View(ns_subclass)
ns_subclass <- initial %>%
select(Strunz, SUBCLASS) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+\\.[A-Z]')) %>%
separate(col = Strunz, sep = '\\.',into = c('ns_class','ns_subclass')) %>%
distinct(.keep_all = FALSE) %>%
arrange(ns_class, ns_subclass) %>%
filter(!is.na(SUBCLASS)) %>%
mutate(SUBCLASS = paste0(ns_class,'.',SUBCLASS)) %>%
rename(description = SUBCLASS, id_class=ns_class, id_subclass=ns_subclass)
View(ns_subclass)
ns_subclass <- initial %>%
select(Strunz, SUBCLASS) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+\\.[A-Z]')) %>%
separate(col = Strunz, sep = '\\.',into = c('ns_class','ns_subclass')) %>%
distinct(.keep_all = FALSE) %>%
arrange(ns_class, ns_subclass) %>%
filter(!is.na(SUBCLASS)) %>%
mutate(SUBCLASS = paste0(ns_class,'.',SUBCLASS)) %>%
rename(description = SUBCLASS, id_class=ns_class, id_subclass=ns_subclass)
View(ns_subclass)
ns_subclass <- initial %>%
select(Strunz, SUBCLASS) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+\\.[A-Z]')) %>%
separate(col = Strunz, sep = '\\.',into = c('ns_class','ns_subclass')) %>%
distinct(.keep_all = FALSE) %>%
arrange(ns_class, ns_subclass) %>%
filter(!is.na(SUBCLASS)) %>%
mutate(ns_subclass = paste0(ns_class,'.',ns_subclass)) %>%
rename(description = SUBCLASS, id_class=ns_class, id_subclass=ns_subclass)
View(ns_subclass)
ns_family <- initial %>%
select(Strunz, FAMILY) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+\\.[A-Z][A-Z]')) %>%
separate(col = Strunz, sep = '\\.',into = c('ns_class','ns_subclass')) %>%
separate(col = ns_subclass, sep = 1,into = c('ns_subclass','ns_family')) %>%
distinct(.keep_all = FALSE) %>%
arrange(ns_class, ns_subclass, ns_family) %>%
filter(!is.na(FAMILY)) %>%
mutate(ns_family = paste0(ns_class,'.',ns_subclass,'.',ns_family)) %>%
rename(description = FAMILY, id_class=ns_class, id_subclass=ns_subclass, id_family=ns_family)
View(ns_family)
ns_family <- initial %>%
select(Strunz, FAMILY) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+\\.[A-Z][A-Z]')) %>%
separate(col = Strunz, sep = '\\.',into = c('ns_class','ns_subclass')) %>%
separate(col = ns_subclass, sep = 1,into = c('ns_subclass','ns_family')) %>%
distinct(.keep_all = FALSE) %>%
arrange(ns_class, ns_subclass, ns_family) %>%
filter(!is.na(FAMILY)) %>%
mutate(ns_subclass = paste0(ns_class,'.',ns_subclass),
ns_family = paste0(ns_class,'.',ns_subclass,ns_family)) %>%
rename(description = FAMILY, id_class=ns_class, id_subclass=ns_subclass, id_family=ns_family)
View(ns_family)
ns_family <- initial %>%
select(Strunz, FAMILY) %>%
mutate(Strunz = str_extract(Strunz, '^[0-9]+\\.[A-Z][A-Z]')) %>%
separate(col = Strunz, sep = '\\.',into = c('ns_class','ns_subclass')) %>%
separate(col = ns_subclass, sep = 1,into = c('ns_subclass','ns_family')) %>%
distinct(.keep_all = FALSE) %>%
arrange(ns_class, ns_subclass, ns_family) %>%
filter(!is.na(FAMILY)) %>%
mutate(ns_subclass = paste0(ns_class,'.',ns_subclass),
ns_family = paste0(ns_subclass,ns_family)) %>%
rename(description = FAMILY, id_class=ns_class, id_subclass=ns_subclass, id_family=ns_family)
View(ns_family)
View(ns_family)
library(tidyverse)
library(googlesheets4)
library(DBI)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- '../export/'
library(tidyverse)
library(googlesheets4)
library(DBI)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- '../export/'
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = ""
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
# PROCESS data -----------------------------------------------------------------
crystal_systems <-
initial %>%
select(`Crystal System`) %>%
distinct()
View(crystal_systems)
# PROCESS data -----------------------------------------------------------------
crystal_systems <-
initial %>%
select(`Crystal System`) %>%
distinct() %>%
arrange()
View(crystal_systems)
# LOAD into DB
dbSendQuery(conn, "DELETE FROM crystal_systems_list;")
dbWriteTable(conn, "crystal_systems_list", crystal_systems, append=TRUE)
# PROCESS data -----------------------------------------------------------------
crystal_systems <-
initial %>%
select(`Crystal System`) %>%
rename(crystal_system_name=`Crystal System`) %>%
distinct() %>%
arrange()
View(crystal_systems)
dbWriteTable(conn, "crystal_systems_list", crystal_systems, append=TRUE)
library(tidyverse)
library(googlesheets4)
library(DBI)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- '../export/'
# LOAD data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = ""
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
dbDisconnect(conn)
# PROCESS data -----------------------------------------------------------------
crystal_classes <-
initial %>%
select(`Class Name`) %>%
rename(crystal_class_name=`Class Name`) %>%
distinct() %>%
arrange()
View(crystal_classes)
# PROCESS data -----------------------------------------------------------------
crystal_classes <-
initial %>%
select(`Class Name`) %>%
rename(crystal_class_name=`Class Name`) %>%
distinct() %>%
arrange(crystal_class_name)
View(crystal_classes)
crystal_systems_list <- tbl(conn, 'crystal_systems_list')
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
crystal_systems_list <- tbl(conn, 'crystal_systems_list')
View(crystal_systems_list)
crystal_systems_list
# PROCESS data -----------------------------------------------------------------
crystal_classes <-
initial %>%
select(`Class Name`,`Crystal System`) %>%
rename(crystal_class_name=`Class Name`, crystal_system_id=`Crystal System`) %>%
distinct() %>%
arrange(crystal_class_name)
View(crystal_classes)
# PROCESS data -----------------------------------------------------------------
crystal_classes <-
initial %>%
select(`Class Name`,`Crystal System`) %>%
rename(crystal_class_name=`Class Name`, crystal_system_name=`Crystal System`) %>%
inner_join(crystal_systems_list, by='crystal_system_name', copy=TRUE) %>%
distinct() %>%
arrange(crystal_class_name)
View(crystal_classes)
# PROCESS data -----------------------------------------------------------------
crystal_classes <-
initial %>%
select(`Class Name`,`Crystal System`) %>%
rename(crystal_class_name=`Class Name`, crystal_system_name=`Crystal System`) %>%
inner_join(crystal_systems_list, by='crystal_system_name', copy=TRUE) %>%
select(crystal_class_name,crystal_system_id) %>%
distinct() %>%
arrange(crystal_class_name)
View(crystal_classes)
# LOAD into DB
dbSendQuery(conn, "DELETE FROM crystal_classes_list;")
dbWriteTable(conn, "crystal_classes_list", crystal_classes, append=TRUE)
# PROCESS data -----------------------------------------------------------------
crystal_classes <-
initial %>%
select(`Class Name`,`H-M symbol`,`Crystal System`) %>%
rename(crystal_class_name=`Class Name`,h_m_symbol=`H-M symbol`, crystal_system_name=`Crystal System`) %>%
inner_join(crystal_systems_list, by='crystal_system_name', copy=TRUE) %>%
select(crystal_class_name,h_m_symbol,crystal_system_id) %>%
distinct() %>%
arrange(crystal_class_name)
View(crystal_classes)
# LOAD data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = ""
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
crystal_classes <-
initial %>%
select(`Class Name`,`H-M symbol`,`Crystal System`) %>%
rename(crystal_class_name=`Class Name`,h_m_symbol=`H-M symbol`, crystal_system_name=`Crystal System`) %>%
inner_join(crystal_systems_list, by='crystal_system_name', copy=TRUE) %>%
select(crystal_class_name,h_m_symbol,crystal_system_id) %>%
distinct() %>%
arrange(crystal_class_name)
View(crystal_classes)
# LOAD into DB
dbSendQuery(conn, "DELETE FROM crystal_classes_list;")
dbWriteTable(conn, "crystal_classes_list", crystal_classes, append=TRUE)
View(crystal_classes)
crystal_classes
initial
# LOAD data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = "sssss"
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
initial
# LOAD data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = "cccccc"
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
initial
# PROCESS data -----------------------------------------------------------------
crystal_classes <-
initial %>%
select(`Class Name`,`H-M symbol`,`Crystal System`) %>%
rename(crystal_class_name=`Class Name`,h_m_symbol=`H-M symbol`, crystal_system_name=`Crystal System`) %>%
inner_join(crystal_systems_list, by='crystal_system_name', copy=TRUE) %>%
select(crystal_class_name,h_m_symbol,crystal_system_id) %>%
mutate(h_m_symbol=as.character(h_m_symbol)) %>%
distinct() %>%
arrange(crystal_class_name)
crystal_classes
# LOAD into DB
dbSendQuery(conn, "DELETE FROM crystal_classes_list;")
dbWriteTable(conn, "crystal_classes_list", crystal_classes, append=TRUE)
# LOAD into DB
dbSendQuery(conn, "DELETE table if exists crystal_classes_list;")
# LOAD into DB
dbSendQuery(conn, "DELETE TABLE if exists crystal_classes_list;")
# LOAD into DB
dbSendQuery(conn, "drop table if exists crystal_classes_list;")
dbWriteTable(conn, "crystal_classes_list", crystal_classes, append=TRUE)
dbDisconnect(conn)
library(tidyverse)
library(googlesheets4)
library(DBI)
setwd("~/Dropbox/GP-minerals/R scripts/export_to_SQL/")
rm(list=ls())
path <- '../export/'
# LOAD data ---------------------------------------------------------------------
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = "cccccc"
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
crystal_classes_list <- tbl(conn, 'crystal_classes_list')
crystal_classes_list
initial <- googlesheets4::read_sheet(
ss='1XDtvw5isb6lzAMrhdXJfP32LlKte94momwj0kMqRXDg',
sheet = 'Sheet2',
range = 'A:E',
col_names = TRUE,
na = "cccccc"
) %>% select(`Space group`,`Non-standard space group`,`H-M symbol`,`Class Name`,`Crystal System`)
# PROCESS data -----------------------------------------------------------------
space_groups <-
initial %>%
select(`Space group`,`Class Name`) %>%
rename(space_group_name=`Space group`,crystal_class_name=`Class Name`) %>%
inner_join(crystal_classes_list, by='crystal_class_name', copy=TRUE) %>%
select(space_group_name,crystal_class_id) %>%
distinct() %>%
arrange(space_group_name)
View(space_groups)
# LOAD into DB
dbSendQuery(conn, "delete from space_groups_list;")
dbWriteTable(conn, "space_groups_list", space_groups, append=TRUE)
