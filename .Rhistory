na = ""
)
cations <- cations %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(variety_of = NA_character_,
group_id=NA_character_,
subgroup_id=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`,variety_of, `Can be expressed as`, class_id, subclass_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, structure_description=`Structure description`,
geometry=Geometry, ion_type=Type)
#Load data ---------------------------------------------------------------------
cations <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Cations',
range = 'A:O',
col_names = TRUE,
col_types = 'c',
na = ""
)
cations <- cations %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(variety_of = NA_character_,
group_id=NA_character_,
subgroup_id=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`,variety_of, `Can be expressed as`, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, structure_description=`Structure description`,
geometry=Geometry, ion_type=Type)
View(anions)
View(cations)
colnames(silicates)
View(anions)
View(cations)
silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_)
silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, `Variety of`, `Can be expressed as`, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type)
silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Structure description`,
geometry=Geometry, ion_type=Type)
silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_) %>%
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, Geometry, Type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`,
geometry=Geometry, ion_type=Type)
silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_, geometry=NA_character_) %>%
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, geometry, Type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`, ion_type=Type)
silicates <- silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_, geometry=NA_character_) %>%
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, geometry, Type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`, ion_type=Type)
View(silicates)
silicates <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:N',
col_names = TRUE,
col_types = 'c',
na = ""
)
silicates <- silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_, geometry=NA_character_,
ion_type='Silicate') %>% # OMIT THIS AFTER RESOLVE ----------------------------------------
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, geometry, Type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`, ion_type=Type)
View(silicates)
silicates <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:N',
col_names = TRUE,
col_types = 'c',
na = ""
)
silicates <- silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_, geometry=NA_character_,
ion_type='Silicate') %>% # OMIT THIS AFTER RESOLVE ----------------------------------------
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, geometry, ion_type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`, ion_type)
silicates <- silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_, geometry=NA_character_,
ion_type='Silicate') %>% # OMIT THIS AFTER RESOLVE ----------------------------------------
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, geometry, ion_type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`)
View(silicates)
colnames(other)
other %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(group_id=NA_character_,subgroup_id=NA_character_, expressed_as=NA_character_, variety_of=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, variety_of, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, geometry, ion_type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Structure description`)
other %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(group_id=NA_character_,subgroup_id=NA_character_, expressed_as=NA_character_, variety_of=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, variety_of, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, ion_type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Structure description`, geometry=Geometry)
other %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(group_id=NA_character_,subgroup_id=NA_character_, expressed_as=NA_character_, variety_of=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, variety_of, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Structure description`, geometry=Geometry, ion_type=Type)
other %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(group_id=NA_character_,subgroup_id=NA_character_, expressed_as=NA_character_, variety_of=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, variety_of, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Structure description`, geometry=Geometry, ion_type=Type)
other %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(group_id=NA_character_,subgroup_id=NA_character_, expressed_as=NA_character_, variety_of=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, variety_of, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`,
structure_description=`Structure description`, geometry=Geometry, ion_type=Type)
Load data ---------------------------------------------------------------------
cations <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Cations',
range = 'A:O',
col_names = TRUE,
col_types = 'c',
na = ""
)
anions <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Anions',
range = 'A:O',
col_names = TRUE,
col_types = 'c',
na = ""
)
other <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Neutral, organic and other compounds',
range = 'A:M',
col_names = TRUE,
col_types = 'c',
na = ""
)
silicates <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:N',
col_names = TRUE,
col_types = 'c',
na = ""
)
d merge into one table
anions <- anions %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_group, by=c('Group'='group_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(expressed_as = NA_character_) %>%
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`,
variety_of=`Variety of`, structure_description=`Structure description`,
geometry=Geometry, ion_type_name=Type)
cations <- cations %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(variety_of = NA_character_,
group_id=NA_character_,
subgroup_id=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`,variety_of, `Can be expressed as`, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, structure_description=`Structure description`,
geometry=Geometry, ion_type_name=Type)
silicates <- silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_, geometry=NA_character_,
ion_type='Silicate') %>%                                                 # OMIT THIS AFTER RESOLVE ----------------------------------------
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, geometry, ion_type_name) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`)
other <- other %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(group_id=NA_character_,subgroup_id=NA_character_, expressed_as=NA_character_, variety_of=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`, variety_of, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`,
structure_description=`Structure description`, geometry=Geometry, ion_type_name=Type)
silicates <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Silicates',
range = 'A:N',
col_names = TRUE,
col_types = 'c',
na = ""
)
silicates <- silicates %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
left_join(io_subgroup, by=c('Subgroup'='subgroup_name'), copy=T) %>%
mutate(group_id=NA_character_, expressed_as=NA_character_, geometry=NA_character_,
ion_type_name='Silicate') %>%                                                 # OMIT THIS AFTER RESOLVE ----------------------------------------
select(`Name (short name)`, Ion, `Ion (oxidation states)`, `Variety of`, expressed_as, class_id, subclass_id, group_id,
subgroup_id, `Name (long name)`, geometry, ion_type_name) %>%
rename(ion_name=`Name (short name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`, variety_of=`Variety of`,
structure_description=`Name (long name)`)
ions = rbind(cations, anions, silicates, other)
ions = rbind(cations, anions)
ions = rbind(cations,  silicates, other)
ions = rbind( anions, silicates, other)
colnames(cations)
colnames(anions)
#Load data ---------------------------------------------------------------------
cations <- googlesheets4::read_sheet(
ss='1FCu3ywv1wVMP6IZjwFezjipXXC74S8hRbLZaNzZCWpg',
sheet = 'Cations',
range = 'A:O',
col_names = TRUE,
col_types = 'c',
na = ""
)
cations <- cations %>%
left_join(io_class, by=c('Class'='class_name'), copy=T) %>%
left_join(io_subclass, by=c('Subclass'='subclass_name'), copy=T) %>%
mutate(variety_of = NA_character_,
group_id=NA_character_,
subgroup_id=NA_character_) %>%
select(`Name (long name)`, Ion, `Ion (oxidation states)`,variety_of, `Can be expressed as`, class_id, subclass_id, group_id,
subgroup_id, `Structure description`, Geometry, Type) %>%
rename(ion_name=`Name (long name)`, formula=Ion, formula_with_oxidation=`Ion (oxidation states)`,expressed_as=`Can be expressed as`,
structure_description=`Structure description`,
geometry=Geometry, ion_type_name=Type)
ions = rbind(cations, anions, silicates, other)
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name)
View(ions)
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE)
View(ions)
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
select(!c(ion_type_name))
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
select(!c(ion_type_name)) %>%
filter(!is.na(ion_name))
View(ions)
colnames(ions)
View(ions)
ions_list = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
select(!c(ion_type_name)) %>%
filter(!is.na(ion_name)) # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
select(!c(ion_type_name)) %>%
filter(!is.na(ion_name)) # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
View(ions)
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
mutate(ion_id=row_number()) %>%
select(c('ion_id',"ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry","ion_type_id") ) %>%
filter(!is.na(ion_name)) # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
View(ions)
ions_ids <- ions %>%
select(formula) %>%
mutate(ion_id = row_number())
View(ions_ids)
View(ions_list)
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of', 'formula'))
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
mutate(ion_id=row_number()) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") ) %>%
filter(!is.na(ion_name)) # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of', 'formula'))
View(ions)
View(ions_ids)
ions %>%
left_join(ions_ids, by=c('variety_of', 'formula'))
colnames(ions)
View(ions)
ions$variety_of
ions$variety_of
ions$variety_of
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of', 'formula'))
?left_join
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of', 'formula'), copy=T)
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula'))
View(ions_list)
ions_ids <- ions %>%
select(formula) %>%
mutate(variety_id = row_number())
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
mutate(ion_id=row_number()) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") ) %>%
filter(!is.na(ion_name)) # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula'))
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula')) %>%
mutate(variety_of=variety_id) %>%
select(!variety_id)
View(ions_list)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ions_list;")
dbWriteTable(conn, "ions_list", ions_list, append=TRUE)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ions_list;")
dbWriteTable(conn, "ions_list", ions_list, append=TRUE)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ions_list;")
dbWriteTable(conn, "ions_list", ions_list, append=TRUE)
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula')) %>%
mutate(variety_of=variety_id) %>%
select(!variety_id) %>%
distinct()
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula')) %>%
mutate(variety_of=variety_id) %>%
select(!variety_id) %>%
distinct(ion_type_id, formula)
?distinct
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula')) %>%
mutate(variety_of=variety_id) %>%
select(!variety_id) %>%
distinct(ion_type_id, formula, .keep_all = TRUE)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ions_list;")
dbWriteTable(conn, "ions_list", ions_list, append=TRUE)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ions_list;")
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
mutate(ion_id=row_number()) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") ) %>%
filter(!is.na(ion_name)) %>% # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
distinct(ion_type_id, formula, .keep_all = TRUE) # OMIT AFTER VITALII REMOVE DUPLICATE SILICATE !!!!!!!!!!!!!!!!!!!!
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
mutate(ion_id=row_number()) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") ) %>%
filter(!is.na(ion_name)) %>% # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
distinct(ion_type_id, formula, .keep_all = TRUE) # OMIT AFTER VITALII REMOVE DUPLICATE SILICATE !!!!!!!!!!!!!!!!!!!!
ions_ids <- ions %>%
select(formula) %>%
mutate(variety_id = row_number())
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula')) %>%
mutate(variety_of=variety_id) %>%
select(!variety_id)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ions_list;")
dbWriteTable(conn, "ions_list", ions_list, append=TRUE)
dbDisconnect(conn)
conn <- dbConnect(RPostgres::Postgres(),dbname = 'postgres',
host = 'master.c6ya4cff5frj.eu-central-1.rds.amazonaws.com',
port = 5432,
user = 'postgres',
password = 'BQBANe++XrmO5xWA3UqipNACx3Mf95kN')
View(ions_list)
ions_ids <- ions %>%
select(formula) %>%
mutate(variety_id = row_number())
View(ions_ids)
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula')) %>%
mutate(variety_of=variety_id) %>%
select(!variety_id)
View(ions_list)
mutate(ion_id=row_number())
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") ) %>%
filter(!is.na(ion_name)) %>% # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
distinct(ion_type_id, formula, .keep_all = TRUE) %>% # OMIT AFTER VITALII REMOVE DUPLICATE SILICATE !!!!!!!!!!!!!!!!!!!!
mutate(ion_id=row_number())
io_class = tbl(conn, 'io_class')
io_subclass = tbl(conn, 'io_subclass')
io_group = tbl(conn, 'io_group')
io_subgroup = tbl(conn, 'io_subgroup')
io_types_list = tbl(conn, 'io_types_list')
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") ) %>%
filter(!is.na(ion_name)) %>% # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
distinct(ion_type_id, formula, .keep_all = TRUE) %>% # OMIT AFTER VITALII REMOVE DUPLICATE SILICATE !!!!!!!!!!!!!!!!!!!!
mutate(ion_id=row_number())
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") ) %>%
filter(!is.na(ion_name)) %>% # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
distinct(ion_type_id, formula, .keep_all = TRUE) %>% # OMIT AFTER VITALII REMOVE DUPLICATE SILICATE !!!!!!!!!!!!!!!!!!!!
mutate(ion_id=row_number())
ions = rbind(cations, anions, silicates, other) %>%
arrange(ion_type_name, ion_name) %>%
left_join(io_types_list, by=c('ion_type_name'='ion_type_name'), copy=TRUE) %>%
filter(!is.na(ion_name)) %>% # OMIT AFTER RESOLVE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
distinct(ion_type_id, formula, .keep_all = TRUE) %>% # OMIT AFTER VITALII REMOVE DUPLICATE SILICATE !!!!!!!!!!!!!!!!!!!!
mutate(ion_id=row_number()) %>%
select(c('ion_id',"ion_type_id","ion_name","formula","formula_with_oxidation","variety_of",
"expressed_as","class_id","subclass_id","group_id","subgroup_id","structure_description",
"geometry") )
ions_ids <- ions %>%
select(formula) %>%
mutate(variety_id = row_number())
ions_list <- ions %>%
left_join(ions_ids, by=c('variety_of'='formula')) %>%
mutate(variety_of=variety_id) %>%
select(!variety_id)
View(ions_list)
# UPLOAD DATA TO DB
dbSendQuery(conn, "DELETE FROM ions_list;")
dbWriteTable(conn, "ions_list", ions_list, append=TRUE)
dbDisconnect(conn)
